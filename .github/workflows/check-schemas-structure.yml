name: Check Schemas Structure

on:
  pull_request:
    paths:
      - 'schemas/**'

jobs:
  check-structure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all branches

    - name: Check for required files
      run: |
        missing_files=0
        for category in schemas/categories/*; do
          if [ -d "$category" ]; then
            if [ ! -f "$category/README.md" ]; then
              echo "Missing README.md in $category"
              missing_files=1
            fi
            for entity in "$category"/*; do
              if [ -d "$entity" ]; then
                if [ ! -f "$entity/README.md" ]; then
                  echo "Missing README.md in $entity"
                  missing_files=1
                fi
                if [ ! -f "$entity/CODEOWNERS" ]; then
                  echo "Missing CODEOWNERS in $entity"
                  missing_files=1
                fi
              fi
            done
          fi
        done
        exit $missing_files

    - name: Check no changes to schemas
      run: |
        invalid_changes=0
        changes=""
        echo "Checking for changes in schema files..."
        # Debugging: Print git status
        git status
        
        # Debugging: List all files being checked
        echo "Files being checked:"
        for file in schemas/**/*; do
          if [ -f "$file" ]; then
            echo "$file"
          fi
        done
        for file in schemas/**/*; do
          if [ -f "$file" ] && [ "$(basename "$file")" != "README.md" ] && [ "$(basename "$file")" != "CODEOWNERS" ]; then
            echo "Checking $file..."
            if ! git diff --name-only --exit-code "$file"; then
              echo "Change detected in $file"
              changes="$changes\nUnexpected change in $file, you should not update a schema file, consider creating a new version instead."
              invalid_changes=1
            fi
          fi
        done
        echo "changes=$changes" >> $GITHUB_ENV
        exit $invalid_changes

    - name: Comment on PR if there are unexpected changes
      if: env.changes != ''
      uses: actions/github-script@v6
      with:
        script: |
            github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Unexpected changes detected:\n${process.env.changes}`
            })